class Category:
  def __init__(self, category):
    self.category = category
    self.ledger = list()
  
  def deposit(self, amount, description=""):
    self.ledger.append({"amount": amount, "description":description})

  def get_balance(self):
    return sum(item["amount"] for item in self.ledger)

  def check_funds(self, amount):
    return amount <= self.get_balance()
    
  def withdraw(self, amount, description=""):
    if self.check_funds(amount):
      self.ledger.append({"amount": -amount, "description":description})
      return True
    else:
      return False

  def transfer(self, amount, category):
    if self.check_funds(amount):
      self.withdraw(amount, f"Transfer to {category.category}")
      category.deposit(amount, f"Transfer from {self.category}")
      return True
    else:
      return False

  def __str__(self):
    top = self.category.center(30,"*") + "\n"
    items = ""
    for item in self.ledger:
      description = item["description"][:23]
      amount = f"{item['amount']:.2f}".rjust(30 - len(description))
      items += f"{description}{amount}\n"
    total = f"Total: {self.get_balance():.2f}"
    return top + items  + total



def create_spend_chart(categories):
  spends = [sum(item["amount"] for item in category.ledger if item["amount"] < 0) for category in categories]
  total = sum(spends)
  percentages = [(spent / total) * 100 if total != 0 else 0 for spent in spends]
  chart = "Percentage spent by category\n"
  for i in range(100, -1, -10):
    chart += str(i).rjust(3) + "| "
    for percent in percentages:
      chart += "o" if percent >= i else " "
      chart += "  "
    chart += "\n"
  chart += "    -" + "---" * len(categories) + "\n"
  max_len = max(len(category.category) for category in categories)

  for i in range(max_len):
    chart += "     "
    for category in categories:
      if i < len(category.category):
        chart += category.category[i] + "  "
      else:
        chart += "   "
    if i != max_len - 1:
      chart += "\n"
  return chart
